//////////////////////////////////////
// CONFIGURAÇÕES INICIAIS

UserName = GetUserInfos().PlayerName
UniverseName = GetUniverseName()
Language = GetLanguage()

telegramId = TELEGRAM_CHAT_ID

fsMade = 0

//////////////////////////////////////
// FUNÇÕES DE ENVIO

func SendAll(msg) {
    Print(msg)
    SendTelegram(telegramId, msg)
//    SendDiscord(DISCORD_WEBHOOK_URL, msg)
}


//////////////////////////////////////
// INÍCIO

intro = "🚀 Início do envio de frotas de Luas para Planetas " + UserName + " (" + UniverseName + " | " + Language + ")"
SendAll(intro)

moons = GetCachedMoons()

for moon in moons {
    origin = moon.Coordinate
    destination = NewCoordinate(origin.Galaxy, origin.System, origin.Position, PLANET_TYPE)

    // Simula uma pausa de análise humana
    Sleep(Random(1000, 3000))

    // Criação da frota
    fleet = NewFleet()
    fleet.SetOrigin(origin)
    fleet.SetDestination(destination)
    fleet.SetMission(PARK)
    fleet.AddShips(LARGECARGO, 5000)

    // Envio da frota
    fleet, err = fleet.SendNow()

    if err != nil {
        errorMsg = "⚠️ Erro ao enviar frota\n🌙 De: " + origin + "\n🪐 Para: " + destination + "\n❌ Erro: " + err
        LogError(err)
        SendAll(errorMsg)
        Sleep(Random(1000, 2000))
    } else {
        successMsg = "✅ Frota enviada com sucesso!\n🌙 De: " + origin + "\n🪐 Para: " + destination + "\n🚚 Missão: Estacionar"
        fsMade += 1
        SendAll(successMsg)
        Sleep(Random(7000, 15000))  // Delay mais humano
    }
}

//////////////////////////////////////
// FINALIZAÇÃO

conclusion = "🎯 Fim do processo por " + UserName + " (" + UniverseName + " | " + Language + ")"
summary = "📦 Total de frotas enviadas com sucesso: " + fsMade

SendAll(conclusion)
SendAll(summary)
